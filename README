MITObim
=======

VERSION
=======
1.1

Copyright 2012 - Christoph Hahn

CONTACT
=======

Christoph Hahn <christoph.hahn@nhm.uio.no>

INTRODUCTION
============

This document contains instructions on how to use the MITObim pipeline described in the manuscript "Reconstructing mitochondrial genomes directly from genomic next generation sequencing reads - a baiting and iterative mapping approach" by Hahn et al., submitted to NAR methods online. The pipeline is at the moment intended to be used with illumina data, but can be readily modified for the use with other platforms data. A test data set is provided in the testdata.tgz archive (see description below). 


PREREQUISITES
=============
- GNU utilities
- perl
- A running version of MIRA v3.4 (http://sourceforge.net/projects/mira-assembler/) is required. An excellent guide to MIRA v3.4 is available at http://mira-assembler.sourceforge.net/docs/DefinitiveGuideToMIRA.html.


WALKTHROUGH MITObim
===================

1. Inititial mapping assembly to (distant) reference using MIRA v3.4:

As part of the iterative baiting and mapping (MITObim) procedure one has to prepare a starting reference. This will be derived from the conserved regions of a (distantly) related mitochondrial genome. Your working directory must contain at least two things: (1) A mitochondrial genome of a (distantly) related species in fasta format (e.g. obtained from Genbank) named MYPROJECT_backbone_in.fasta. (2) Illumina data in fastq format and named MYPROJECT_in_solexa.fastq. 
Now we want to run a mapping assembly using MIRA 3.4. An example can be found below (This command performs a basic mapping assembly including prior trimming and clipping of your illumina reads): 

-bash-4.1$ mira --project=MYPROJECT --job=mapping,genome,accurate,solexa -MI:somrnl=0 -AS:nop=1 -SB:bft=fasta:bbq=30:bsn=REFname SOLEXA_SETTINGS -CO:msr=no -SB:dsn=STRAINname

For more detailed information on Solexa mapping assemblies with MIRA 3.4 see http://mira-assembler.sourceforge.net/docs/DefinitiveGuideToMIRA.html#sect_sxa_mapping_assemblies.

NOTE: This step might require substantial computational resources depending on the size of the illumina readpool (Memory requirements can be estimated using the miramem program shipping with MIRA). This increased memory consumption can be bypassed by limitating the readpool e.g. via an initial in-silico baiting step using mirabait (in-silico baiting program shipping with MIRA). While this strategy will impair the sensitivity of the approach, it works reasonably well when a not to distantly related reference is available. This method is included in the provided wrapper script and can be performed by using the --quick flag, together with providing a reference sequence in fasta format. A detailed example can be found in the testdata section.

2. run MITObim.pl script:

usage: ./MITObim.pl <parameters>

parameters:

        -start <int>            iteration to start with, default=1
        -end <int>              iteration to end with, default=1
        -strain <string>        strainname as used in initial MIRA assembly
        -ref <string>           referencename as used in initial MIRA assembly
        -readpool <PATH>        path to readpool in fastq format
        -maf <PATH>             path to maf file from previous MIRA assembly

optional:

        --denovo                runs MIRA in denovo mode, default: mapping
        --pair                  finds pairs after baiting, default: no
        --quick <PATH>          starts process with initial baiting using provided fasta reference
        --noshow                do not show output of MIRA modules
        --help                  shows this information

examples:
./MITObim.pl -start 1 -end 5 -strain StrainX -ref Gthymalli-mt -readpool /PATH/TO/readpool.fastq -maf /PATH/TO/assembly.maf
./MITObim.pl --quick /PATH/TO/reference.fasta -strain StrainY -ref Gthymalli-mt -readpool /PATH/TO/readpool.fastq

The script is performing three steps and iteratively repeating them: (i) Deriving reference sequence from previous mapping assembly, (ii) in silico baiting using the newly derived reference (iii) previously fished reads are mapped to the newly derived reference leading to an extension of the reference sequence. 

TESTDATA
========

Instructions on how to use the testdata will be provided soon
